@model ProductNameUpsertVM

@{
    ViewData["Title"] = @localizer["Products Names"];
    ViewData["SubTitle"] = Model.ProductNameUpsertDto?.Id == null ? @localizer["Add New ProductName"] : Model.ProductNameUpsertDto.Name;
    ViewData["ActiveSidebar"] = "liProductName";
    ViewData["ActiveTreeMenu"] = "liProductTree";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12" style="margin: auto !important;">
                <div class="card card-outline card-primary">
                    <form asp-action="@(Model.ProductNameUpsertDto?.Id == null ?"CreateProductName":"UpdateProductName")" method="post">
                        <input type="hidden" asp-for="ProductNameUpsertDto.Id" />
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label asp-for="ProductNameUpsertDto.Name"> @localizer["Product Name"]</label><span class="text-red text-bold">*</span>
                                        <input asp-for="ProductNameUpsertDto.Name" class="form-control" />
                                        <span asp-validation-for="ProductNameUpsertDto.Name" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label asp-for="ProductNameUpsertDto.PublisherId">@localizer["Publisher"]</label><span class="text-red text-bold">*</span>
                                        <select asp-for="ProductNameUpsertDto.PublisherId" class="form-control" asp-items="Model.Publishers">
                                            <option value="">@localizer["Select Publisher"]</option>
                                        </select>
                                        <span asp-validation-for="ProductNameUpsertDto.PublisherId" class="text-danger"></span>
                                    </div>
                                </div>
                                </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label> @localizer["Activety Status"]</label>
                                        <select asp-for="ProductNameUpsertDto.IsActive" class="form-control" style="width: 100%;">
                                            <option value="false">@localizer["Inactive"]</option>
                                            <option value="true">@localizer["Active"]</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="space-4"></div>
                            <div class="row">
                                <div class="col-sm-12 pr-10">
                                    <div class="float-right">
                                        <a id="btnClose" asp-action="Index" class="btn btn-sm btn-secondary m-1 pl-3 pr-3"><i class="ace-icon fa fa-arrow-left"></i> @localizer["BackToList"]</a>
                                        @if (Model.ProductNameUpsertDto?.Id != null)
                                        {
                                            <a asp-action="DeleteProductName" asp-route-id="@Model.ProductNameUpsertDto.Id" onclick="return confirm('@localizer["Are you sure you want to delete this Product Name?"]')" class="btn btn-sm btn-danger m-1 pl-3 pr-3"><i class="ace-icon fa fa-trash bigger-130 "></i> @localizer["Delete"]</a>
                                        }
                                        <button type="submit" class="btn btn-sm btn-primary"> @(Model.ProductNameUpsertDto?.Id == null ? @localizer["Save"] : @localizer["Edit"])</button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}




